






























































}  );    </FormContainer>      <SubmitButton text={loading ? "Skickar..." : "Registrera"} disabled={loading} />      <PasswordField name="password" register={register} error={errors.password?.message} />      <InputField label="E-post" name="email" register={register} error={errors.email?.message} />      <InputField label="Namn" name="name" register={register} error={errors.name?.message} />    <FormContainer onSubmit={handleSubmit(onSubmit)}>  return (  };    }      setLoading(false);    } finally {      console.error(error);      alert("Något gick fel!");    } catch (error) {      router.push("/profile");      reset();      alert("Registrering lyckades!");      await addUser(data);    try {    setLoading(true);  const onSubmit = async (data: any) => {    });    resolver: yupResolver(schema),  const { register, handleSubmit, reset, formState: { errors } } = useForm({    const router = useRouter();  const [loading, setLoading] = useState(false);  const { addUser } = useUserStore();export default function Form() {});  password: yup.string().min(6, "Lösenordet måste vara minst 6 tecken").required("Lösenord är obligatoriskt"),  email: yup.string().email("Ogiltig e-post").required("E-post är obligatoriskt"),  name: yup.string().required("Namn är obligatoriskt"),const schema = yup.object().shape({  `;  }    background-color: #1a1a1a;  @media (prefers-color-scheme: dark) {    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);  border-radius: 8px;  padding: 2rem;  background-color: #f9f9f9;const FormContainer = styled.form`import styled from "styled-components";import SubmitButton from "./SubmitButton";import PasswordField from "./PasswordField";import InputField from "./InputField";import { useUserStore } from "../../lib/store";import * as yup from "yup";import { yupResolver } from "@hookform/resolvers/yup";import { useForm } from "react-hook-form";import { useRouter } from "next/navigation";import { useState } from "react";'use client';