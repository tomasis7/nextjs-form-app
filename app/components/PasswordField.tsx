


















































export default PasswordField;};  );    </InputContainer>      {error && <ErrorMessage>{error}</ErrorMessage>}      <Input id={name} type="password" {...register(name)} />      <Label htmlFor={name}>LÃ¶senord</Label>    <InputContainer>  return (const PasswordField = ({ name, register, error }: PasswordFieldProps) => {}  error?: string;  register: any;  name: string;interface PasswordFieldProps {`;  margin-top: 0.25rem;  font-size: 0.875rem;  color: #e00;const ErrorMessage = styled.p``;  }    box-shadow: 0 0 0 2px rgba(0, 112, 243, 0.2);    border-color: #0070f3;    outline: none;  &:focus {    font-size: 1rem;  border-radius: 4px;  border: 1px solid #ccc;  padding: 0.75rem;  width: 100%;const Input = styled.input``;  font-weight: 500;  margin-bottom: 0.5rem;  display: block;const Label = styled.label``;  margin-bottom: 1.5rem;const InputContainer = styled.div`import styled from "styled-components";'use client';